{"version":3,"sources":["ftpUtils.js"],"names":["rewire","require","myModule","caesarsLoggerMock","log","a","b","c","d","sftpClient","connect","console","Promise","resolve","reject","put","buffer","fileName","get","filename","__set__","t","contact","JSON","parse","contact1","contacts","saveFileOnSFTPServer","sftpConnectionTestParameters","true","readFileFromSFTPServer"],"mappings":";;;;AAAA;;;;;;AAEA,IAAIA,SAASC,QAAQ,QAAR,CAAb;;AAEA,IAAIC,WAAWF,OAAO,sBAAP,CAAf;;AAEA,IAAIG,oBAAoB;AACpBC,SAAM,UAASC,CAAT,EAAWC,CAAX,EAAaC,CAAb,EAAeC,CAAf,EAAiB,CAAE;AADL,CAAxB;;AAIA,IAAIC,aAAa;;AAEbC,aAAU,UAASL,CAAT,EAAW;AACjBM,gBAAQP,GAAR,CAAY,cAAZ;AACA,eAAO,IAAIQ,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB,CAAE,CAAnC,CAAP;AACH,KALY;AAMbC,SAAM,UAAUC,MAAV,EAAkBC,QAAlB,EAA2B;AAC7BN,gBAAQP,GAAR,CAAY,UAAZ;AACA,eAAO,IAAIQ,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB,CAAE,CAAnC,CAAP;AACH,KATY;AAUbI,SAAM,UAASC,QAAT,EAAkB;AACpBR,gBAAQP,GAAR,CAAY,UAAZ;AACA,eAAO,IAAIQ,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB,CAAE,CAAnC,CAAP;AACH;AAbY,CAAjB;;AAgBAZ,SAASkB,OAAT,CAAiB,eAAjB,EAAkCjB,iBAAlC;AACAD,SAASkB,OAAT,CAAiB,YAAjB,EAA+BX,UAA/B;;AAEA,mBAAK,0BAAL,EAAiCY,KAAG;AAChC,QAAIC,UAAUC,KAAKC,KAAL,CAAW,kDAAX,CAAd;AACA,QAAIC,WAAWF,KAAKC,KAAL,CAAW,kDAAX,CAAf;AACA,QAAIE,WAAW,CAACJ,OAAD,EAASG,QAAT,CAAf;AACAvB,aAASyB,oBAAT,CAA8BD,QAA9B,EAAuC,IAAvC,EAA4CxB,SAAS0B,4BAAT,EAA5C;AACAP,MAAEQ,IAAF,CAAO,IAAP;AACH,CAND;;AAQA,mBAAK,4BAAL,EAAmCR,KAAI;AACnCnB,aAAS4B,sBAAT,CAAgC,IAAhC,EAAqC5B,SAAS0B,4BAAT,EAArC,EAA8E,IAAI,UAASvB,CAAT,EAAW,CAAE,CAAjB,EAA9E;AACAgB,MAAEQ,IAAF,CAAO,IAAP;AACH,CAHD","file":"ftpUtils.js","sourcesContent":["import test from 'ava';\r\n\r\nvar rewire = require(\"rewire\");\r\n\r\nvar myModule = rewire(\"../utils/ftpUtils.js\");\r\n\r\nvar caesarsLoggerMock = {\r\n    log : function(a,b,c,d){}\r\n}\r\n\r\nvar sftpClient = {\r\n\r\n    connect : function(a){\r\n        console.log('mock connect');\r\n        return new Promise((resolve, reject) => {});\r\n    },\r\n    put : function (buffer, fileName){\r\n        console.log('mock put');\r\n        return new Promise((resolve, reject) => {});\r\n    },\r\n    get : function(filename){\r\n        console.log('mock get');\r\n        return new Promise((resolve, reject) => {});\r\n    }\r\n}\r\n\r\nmyModule.__set__(\"caesarsLogger\", caesarsLoggerMock);\r\nmyModule.__set__(\"sftpClient\", sftpClient);\r\n\r\ntest('save File On SFTP Server', t=>{\r\n    var contact = JSON.parse('{\"firstname\":\"nth offer\",\"lastname\":\"nth offer\"}');\r\n    var contact1 = JSON.parse('{\"firstname\":\"nth offer\",\"lastname\":\"nth offer\"}');\r\n    var contacts = [contact,contact1];\r\n    myModule.saveFileOnSFTPServer(contacts,null,myModule.sftpConnectionTestParameters());\r\n    t.true(true);\r\n});\r\n\r\ntest('read File From SFTP Server', t=> {\r\n    myModule.readFileFromSFTPServer(null,myModule.sftpConnectionTestParameters(), new function(a){})\r\n    t.true(true);\r\n})"]}