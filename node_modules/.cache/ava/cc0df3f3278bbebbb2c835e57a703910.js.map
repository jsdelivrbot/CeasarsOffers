{"version":3,"sources":["segment.js"],"names":["rewire","require","myModule","caesarsLoggerMock","log","a","b","c","d","dbUtilsMock","buildContactInsertStatement","runQuery","buildContactInsertStatementFromFile","pgMock","connect","lineReaderMock","on","readLineMock","createInterface","fsMock","createReadStream","__set__","t","insertSegmentMembers","true","uploadSegments"],"mappings":";;;;AAAA;;;;;;AAEA,IAAIA,SAASC,QAAQ,QAAR,CAAb;;AAEA,IAAIC,WAAWF,OAAO,qBAAP,CAAf;;AAEA,IAAIG,oBAAoB;AACpBC,SAAM,UAASC,CAAT,EAAWC,CAAX,EAAaC,CAAb,EAAeC,CAAf,EAAiB,CAAE;AADL,CAAxB;;AAIA,IAAIC,cAAc;AACdC,iCAA8B,UAASL,CAAT,EAAW,CAAE,CAD7B;AAEdM,cAAW,UAASN,CAAT,EAAWC,CAAX,EAAaC,CAAb,EAAe,CAAE,CAFd;AAGdK,yCAAsC,UAASP,CAAT,EAAWC,CAAX,EAAa,CAAE;AAHvC,CAAlB;;AAMA,IAAIO,SAAS;AACTC,aAAU,UAAST,CAAT,EAAWC,CAAX,EAAa,CAAE;AADhB,CAAb;;AAIA,IAAIS,iBAAiB;AACjBC,QAAK,UAAUX,CAAV,EAAYC,CAAZ,EAAc,CAAE;AADJ,CAArB;;AAIA,IAAIW,eAAe;AACfC,qBAAkB,UAASb,CAAT,EAAW;AACzB,eAAOU,cAAP;AACH;AAHc,CAAnB;;AAMA,IAAII,SAAS;AACTC,sBAAmB,UAASf,CAAT,EAAW,CAAE;AADvB,CAAb;;AAKAH,SAASmB,OAAT,CAAiB,QAAjB,EAA2BlB,iBAA3B;AACAD,SAASmB,OAAT,CAAiB,SAAjB,EAA4BZ,WAA5B;AACAP,SAASmB,OAAT,CAAiB,IAAjB,EAAuBR,MAAvB;AACAX,SAASmB,OAAT,CAAiB,UAAjB,EAA6BJ,YAA7B;AACAf,SAASmB,OAAT,CAAiB,IAAjB,EAAuBF,MAAvB;;AAEA,mBAAK,wBAAL,EAAgCG,KAAK;AACjCpB,aAASqB,oBAAT,CAA8B,IAA9B;AACAD,MAAEE,IAAF,CAAO,IAAP;AACH,CAHD;;AAKA,mBAAK,iBAAL,EAAwBF,KAAK;AACzBpB,aAASuB,cAAT,CAAwB,IAAxB;AACAH,MAAEE,IAAF,CAAO,IAAP;AACH,CAHD","file":"segment.js","sourcesContent":["import test from 'ava';\r\n\r\nvar rewire = require(\"rewire\");\r\n\r\nvar myModule = rewire(\"../model/segment.js\");\r\n\r\nvar caesarsLoggerMock = {\r\n    log : function(a,b,c,d){}\r\n}\r\n\r\nvar dbUtilsMock = {\r\n    buildContactInsertStatement : function(a){},\r\n    runQuery : function(a,b,c){},\r\n    buildContactInsertStatementFromFile : function(a,b){}\r\n}\r\n\r\nvar pgMock = {\r\n    connect : function(a,b){}\r\n}\r\n\r\nvar lineReaderMock = {\r\n    on : function (a,b){}\r\n}\r\n\r\nvar readLineMock = {\r\n    createInterface : function(a){\r\n        return lineReaderMock;\r\n    }\r\n}\r\n\r\nvar fsMock = {\r\n    createReadStream : function(a){}\r\n}\r\n\r\n\r\nmyModule.__set__(\"logger\", caesarsLoggerMock);\r\nmyModule.__set__(\"dbUtils\", dbUtilsMock);\r\nmyModule.__set__(\"pg\", pgMock);\r\nmyModule.__set__(\"readLine\", readLineMock);\r\nmyModule.__set__(\"fs\", fsMock);\r\n\r\ntest('insert Segment Members',  t => {\r\n    myModule.insertSegmentMembers(null);\r\n    t.true(true);\r\n});\r\n\r\ntest('upload Segments', t => {\r\n    myModule.uploadSegments(null);\r\n    t.true(true);\r\n});"]}